###.1 알고리즘의 복잡도

##.1 시간복잡도
# 시간복잡도란 문제의 크기와 이를 해결하는 데 걸리는 시간 사이의 관계로서 데이터의 크기가 커지면 문제를 해결하는데에 걸리는 시간이 어떠한 관계로 증가하게 되는 가를 말하는 개념이다.

##.2 공간복잡도
# 공간복잡도란 문제의 크기와 이를 해결하는 데 필요한 메모리 공간 사이의 관계

##.3 평균 시간 복잡도
# 임의의 입력 패턴을 가정했을 때 소요되는 시간의 평균

##.4 최악 시간 복잡도
# 가장 긴 시간을 소요하게 만드는 입력에 따라 소요되는 시간

##.5 점근 표기법
# 어떤 함수의 증가 양상을 다른 함수와의 비교로 표현하는 방법으로 O(n), O(logn)과 같이 표현하는 방법이다.
# 즉, 여기서 n은 입력값의 크기를 의미하는 것으로 O(logn)은 입력의 크기에 따라서 로그에 비례하는 시간이 소요된다는 의미이고, O(n)은 입력의 크기에 따라서 비례하는 시간이 소요된다는 의미이다.

# 선형탐색 알고리즘은 O(n)으로 표현되고, 이진탐색 알고리즘은 O(logn)으로 표현된다.

# 이차시간 알고리즘은 O(n2)을 의미하며 이는 삽입 정렬에서 발생하는데, 단 입력값이 best case인 경우 O(n)의 시간 복잡도를 갖고 입력값이 모두 역순으로 정렬된 상태인 worst case에서는 O(n^2)의 시간복잡도로 표현되게 된다.

# 입력 패턴에 따라서 정렬속도에 차이가 존재하긴 하지만 정렬 문제에서는 O(nlogn)보다 낮은 복잡도를 갖는 알고리즘은 존재할 수 없음이 증명되어 있다. 정렬할 데이터를 반씩 나누어 각각 정렬하는 병합 정렬이 이러한 시간복잡도로 표현된다.





