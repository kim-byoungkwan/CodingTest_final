###.1

# sort() 메소드와 sorted() 함수의 key 인자 값에 함수가 할당되어 그 함수가 가진 고유한 관계를 기준으로 정렬을 발생시킬 수 있는데, 이때, key 인자에 할당된 함수의 결과값이 가장 작은 값을 기준으로 정렬이 발생되게된다. 그런데 이때 만약 reverse 인자에 True를 설정하게되면, key 할당된 함수의 결과값이 작은 값을 기준으로 하는 것이 아니라, 큰 값을 기준으로, 즉, 역방향을 기준으로 정렬을 발생시키게된다.

def solution(numbers):

    numbers = [str(x) for x in numbers]

# 위 코드의 시간 복잡도는 O(n)

# 위의 코드는 원소값이 모두 int 형인 리스트 numbers의 원소를 str형으로 변환시켜주는 코드이다.

    numbers.sort(key = lambda x:(x*4)[:4],reverse=True)

# 위의 sort 메소드의 의미는 numbers의 모든 원소를 표현하는 x에 대하여 함수 (x*4)[:4] 의 결과 값을 기준으로 하여 큰 값으로 결정되는 값을 기준으로하여 리스트의 원래의 원소값을 정렬하는 메소드를 의미하는 것이다.즉, key 인자에 정의된 lambda 함수의 x 인자는 이경우 sort 메소드가 적용되고 있는 리스트의 원소를 의미하는 것이다.

# 위 코드는 sort 연산을 포함하므로 시간 복잡도는 O(nlogn)이다. 즉, 전체 코드의 시간복잡도는 위 코드의 sort 연산에 의해 지배되어 전체코드의 시간복잡도는 O(nlogn)으로 결정되게된다.

    if numbers[0] == '0':

        answer = '0'

    else:

        answer = ''.join(numbers)

# 위 코드의 join 메소드는 리스트의 원소의 개수 n에 의해 비례하여 결정되므로 시간복잡도는 O(n)으로 결정된다.

    return answer

# ''.join(리스트) 메소드는 리스트에 있는 모든 원소를 하나의 원소로 이어붙여주는 메소드이다. 이때 만약 구분자에 '_'.join(리스트) 와 같이 표현된다면, 모든 원소의 사이사이에 '_' 구분자가 삽입된 하나의 원소가 출력되게된다.즉, 첫번째 경우는 구분자가 규정되지 않았으므로, 리스트의 모든원소사이에 아무런 구분자 없이 출력하여 이어붙이는 결과를 발생시키게 되는 것이다.








