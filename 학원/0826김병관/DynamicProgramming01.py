# 다이나믹 프로그래밍
# 한번 계산한 문제는 다시 계산하지 않도록 하는 알고리즘

# 1로 만들기

# 정수 X가 주어질때 정수 X에 사용할 수 있는 연산은 다음과 같이 4가지 이다.
#     X가 5로 나누어 떨어지면 5로 나눈다.
#     X가 3으로 나누어 떨어지면 3으로 나눈다.
#     X가 2로 나누어 떨어지면 2로 나눈다.
#     X에서 1을 뺀다.
# 정수 X가 주어졌을때 연산 4개를 적절히 사용해서 1을 만들려고 한다.
# 연산을 사용하는 횟수의 최소값을 출력하시오

# 입력조건
# 첫째줄에 정수 X가 주어진다.(1<=X<=30000)

# 출력조건
# 첫째줄에 연산을 하는 횟수의 최소값을 출력한다.

# 입력예시
# 26
# 출력예시
# 3

x = int(input())

d = [0] * 30001

for i in range(2,x+1):
    d[i] = d[i-1] + 1

    if i % 2 == 0:
        d[i] = min(d[i],d[i//2] + 1)

    if i % 3 == 0:
        d[i] = min(d[i],d[i//3] + 1)

    if i % 5 == 0:
        d[i] = min(d[i],d[i//5] + 1)

print(d[x])


